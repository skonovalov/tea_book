*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html,body{height:100%;font-family:'Ubuntu',sans-serif;font-weight:300}h3{letter-spacing:6px;color:#485154;font-family:'Ubuntu',sans-serif;font-size:20px;line-height:26px;font-weight:300;text-transform:uppercase}.wrapper{min-height:100%;width:100%;margin-bottom:-190px;}.wrapper:after{content:'';height:190px;display:block}.container{width:1200px;margin:0 auto}#main{width:100%;height:100%;}#main .wrapper{position:relative;background:url("../images/bg.jpg") no-repeat center center;-webkit-background-size:cover;-moz-background-size:cover;background-size:cover}#main header{position:absolute;top:2.5%;left:2.5%;z-index:15;width:95%;height:95%;padding-top:0;background:#fff;opacity:0;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);visibility:hidden;-webkit-transition:opacity 0.3s ease, visibility 0.3s ease;-moz-transition:opacity 0.3s ease, visibility 0.3s ease;-o-transition:opacity 0.3s ease, visibility 0.3s ease;-ms-transition:opacity 0.3s ease, visibility 0.3s ease;transition:opacity 0.3s ease, visibility 0.3s ease}#main .logo{display:none}#main .menu{display:block;margin:0 auto;margin-top:300px;width:70%;opacity:0;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);visibility:hidden;-webkit-transform:translate(0,-300px);-moz-transform:translate(0,-300px);-o-transform:translate(0,-300px);-ms-transform:translate(0,-300px);transform:translate(0,-300px);-webkit-transition:opacity 0.6s ease, visibility 0.6s ease, -webkit-transform 1s ease;-moz-transition:opacity 0.6s ease, visibility 0.6s ease, -moz-transform 1s ease;-o-transition:opacity 0.6s ease, visibility 0.6s ease, -o-transform 1s ease;-ms-transition:opacity 0.6s ease, visibility 0.6s ease, -ms-transform 1s ease;transition:opacity 0.6s ease, visibility 0.6s ease, transform 1s ease;}#main .menu ul{float:none;width:53%;border-right:1px solid #e0e4e5;padding-top:0;}#main .menu ul li{display:block;}#main .menu ul li a{font-size:40px;line-height:1.2em}#main .menu ul li:last-child{padding-bottom:0}#main .menuFadeIn{opacity:1;-ms-filter:none;filter:none;visibility:visible;-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-o-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}#main footer{position:absolute;width:95%;left:2.5%;bottom:2.5%;border-top:none}#main .footer-copy{color:#fff;padding-top:20px}#main .open-menu{opacity:1;-ms-filter:none;filter:none;visibility:visible}.icon-close{display:inline-block;position:absolute;top:3.5%;left:49%;cursor:pointer}#page{height:100%;width:100%}.main{position:absolute;top:2.5%;left:2.5%;width:95%;height:95%;background:rgba(166,172,174,0.3)}.hamb{position:absolute;top:5%;left:50%;z-index:10;width:25px;height:15px;cursor:pointer;}.hamb ul li{width:100%;height:3px;-webkit-border-radius:3px;border-radius:3px;background:#fff;margin-bottom:3px;}.hamb ul li:last-child{margin-bottom:0}.main-inner{position:relative;top:40%}.main-text h1{font-size:55px;line-height:79px;letter-spacing:.3em;color:#fff;text-transform:uppercase;text-align:center}.main-text h5{width:50%;margin:0 auto;font-size:12px;line-height:18px;letter-spacing:.4em;color:#fff;text-transform:uppercase;text-align:center}.content{width:100%}.navigation{width:100%;margin:0 auto;background:url("../images/navigation.jpg") no-repeat center center;-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;margin-bottom:73px;}.navigation ul{max-width:1200px;font-size:0;padding:46px 0 42px;margin:0 auto;text-align:center;}.navigation ul li{display:inline-block;vertical-align:top;}.navigation ul li a{font-size:27px;line-height:32px;font-weight:700;color:#fff;text-decoration:none;letter-spacing:8px;text-transform:uppercase;-webkit-transition:color 0.3s ease;-moz-transition:color 0.3s ease;-o-transition:color 0.3s ease;-ms-transition:color 0.3s ease;transition:color 0.3s ease;}.navigation ul li a:hover{color:#b8bdbf}.navigation ul li span{font-size:28px;line-height:32px;color:#fff;font-weight:300;letter-spacing:8px;text-transform:uppercase}footer{width:100%;height:190px;padding:50px 0 78px;border-top:1px solid #b8bdbf}.footer-copy{font-family:'Ubuntu',sans-serif;font-size:12px;line-height:18px;color:#b8bdbf;text-align:center}.fancybox-overlay{background:rgba(0,0,0,0.8)}.fancybox-skin{padding:0 !important}.fancybox-close{top:-30px;right:0;width:24px;height:24px;background:url("../images/close.png") no-repeat}.fancybox-prev span{left:-20%;background:url("../images/left.png") no-repeat}.fancybox-nav:hover span{visibility:visible}/*# sourceMappingURL=index.css.map */
/*# sourceMappingURL=data:application/json;base64, */
