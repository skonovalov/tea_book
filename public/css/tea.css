header{width:100%;padding:22px 0 0 0}.header{font-size:0;line-height:0;letter-spacing:-4px}.logo{display:inline-block;vertical-align:top;width:25%;line-height:normal;letter-spacing:normal;}.logo a{display:block;width:100%;height:100%;text-decoration:none;}.logo a span{display:block;font-size:18px;line-height:30px;font-weight:700;color:#485154;letter-spacing:.3em;text-transform:uppercase;text-align:center}.logo a em{display:block;font-size:12px;line-height:18px;color:#b8bdbf;letter-spacing:.4em;text-align:center;text-transform:uppercase}.menu{display:inline-block;vertical-align:top;width:75%;line-height:normal;letter-spacing:normal;zoom:1;}.menu:before,.menu:after{content:"";display:table}.menu:after{clear:both}.menu ul{float:right;font-size:0;padding-top:18px;}.menu ul li{display:inline-block;vertical-align:top;margin-left:42px;padding-bottom:40px;}.menu ul li a{font-size:20px;line-height:20px;color:#b8bdbf;text-transform:uppercase;text-decoration:none;-webkit-transition:color 0.3s ease;-moz-transition:color 0.3s ease;-o-transition:color 0.3s ease;-ms-transition:color 0.3s ease;transition:color 0.3s ease;}.menu ul li a:hover{color:#485154}.menu ul .current-menu-item a{color:#485154}#tab-container ul{margin-bottom:42px;font-size:0;text-align:center;}#tab-container ul li{display:inline-block;vertical-align:top;margin:0 20px;}#tab-container ul li a{font-family:'Ubuntu',sans-serif;font-size:20px;line-height:26px;font-weight:300;color:#333;letter-spacing:6px;text-transform:uppercase;text-decoration:none;-webkit-transition:color 0.3s ease;-moz-transition:color 0.3s ease;-o-transition:color 0.3s ease;-ms-transition:color 0.3s ease;transition:color 0.3s ease;}#tab-container ul li a:hover{color:#b8bdbf}#tab-container ul .active a{font-weight:700;}#tab-container ul .active a:hover{color:#333}.tea-container{width:1200px;margin:0 auto}.tea-item{display:inline-block;vertical-align:top;width:360px;margin:15px}.tea-item-img{width:360px;height:252px;position:relative;}.tea-item-img img{display:block;width:100%;height:100%}.tea-item-img:hover .tea-item-overlay{width:100%;height:100%;top:0;left:0;-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);opacity:1;-ms-filter:none;filter:none;visibility:visible;background:rgba(255,255,255,0.7)}.tea-item-overlay{display:table;position:absolute;width:110%;height:100%;top:-5%;left:-5%;-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);opacity:0;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);visibility:hidden;background:none;-webkit-transition:width 0.3s ease, height 0.3s ease, -webkit-transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, background 0.3s ease, top 0.3s ease, left 0.3s ease;-moz-transition:width 0.3s ease, height 0.3s ease, -moz-transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, background 0.3s ease, top 0.3s ease, left 0.3s ease;-o-transition:width 0.3s ease, height 0.3s ease, -o-transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, background 0.3s ease, top 0.3s ease, left 0.3s ease;-ms-transition:width 0.3s ease, height 0.3s ease, -ms-transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, background 0.3s ease, top 0.3s ease, left 0.3s ease;transition:width 0.3s ease, height 0.3s ease, transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, background 0.3s ease, top 0.3s ease, left 0.3s ease}.tea-item-links{display:table-cell;vertical-align:middle;text-align:center;font-size:24px;}.tea-item-links a{text-align:center;text-decoration:none;color:#485154;-webkit-transition:color 0.3s ease;-moz-transition:color 0.3s ease;-o-transition:color 0.3s ease;-ms-transition:color 0.3s ease;transition:color 0.3s ease;}.tea-item-links a:hover{color:#b8bdbf}.tea-item-text{padding-top:45px;}.tea-item-text a{display:block;margin-bottom:18px;text-decoration:none;}.tea-item-text a h3{-webkit-transition:color 0.3s ease;-moz-transition:color 0.3s ease;-o-transition:color 0.3s ease;-ms-transition:color 0.3s ease;transition:color 0.3s ease}.tea-item-text a:hover h3{color:#b8bdbf}.tea-item-text p{height:81px;overflow:hidden;font-family:'Ubuntu',sans-serif;font-size:14px;line-height:27px;color:#333;word-wrap:break-word}/*# sourceMappingURL=tea.css.map */
/*# sourceMappingURL=data:application/json;base64, */
